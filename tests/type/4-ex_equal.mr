r = []
c = 0

#* Test1 *#

if bool === none === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test2 *#

if object === object() === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test3 *#

if int === 2 === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test4 *#

if float === 3.0 === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test5 *#

if complex === (4.0 + 0.0i) === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test6 *#

if bool === true === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test7 *#

if char === 'c' === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test8 *#

if str === "str" === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test9 *#

if list === [1, true, none] === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test10 *#

if tuple === (12, 'g', "tuple") === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test11 *#

if int === int === true && str === object === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test12 *#

if object === func() {} === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test13 *#

if tuple === struct {} === false
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Result *#

if c === 13:
    "PASSED"
else:
    r
