a = []
c = 0

#* Test1 <int> type *#

v = 6 * 7
if v is int && v == 42
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test2 *#

v = 9 * 2.5
if v is float && v == 22.5
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test3 *#

v = 1 * 1.3i
if v is complex && v == 1.3i
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test4 *#

v = 99999 * false
if v is int && v == 0
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test5 *#

v = 12 * '\f'
if v is int && v == 144
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test6 <float> type *#

v = 10.5 * 4
if v is float && v == 42
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test7 *#

v = 0.25 * 0.5
if v is float && v == 0.125
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test8 *#

v = 1.6 * (2 + 5i)
if v is complex && v == (3.2 + 8i)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test9 *#

v = 2.718 * true
if v is float && v == 2.718
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test10 *#

v = 0.0 * '~'
if v is float && v == 0
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test11 <complex> type *#

v = (5.5i + 12) * 2
if v is complex && v == (11i + 24)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test12 *#

v = 7i * 0.5
if v is complex && v == (3.5i)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test13 *#

v = (5i + 4) * (0.5i + 3)
if v is complex && v == (9.5 + 17i)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test14 *#

v = (100 + 99i) * false
if v is complex && v == 0i
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test15 *#

v = (1i + 2) * '\r'
if v is complex && v == (13i + 26)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test16 <bool> type *#

v = true * 314
if v is int && v == 314
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test17 *#

v = false * 12.345
if v is float && v == 0
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test18 *#

v = true * (6i + 66)
if v is complex && v == (66 + 6i)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test19 *#

v = false * false
if v is bool && v == false
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test20 *#

v = false * '8'
if v is char && v == '\0'
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test21 <char> type *#

v = '*' * 11
if v is int && v == 462
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test22 *#

v = '\\' * 0.5
if v is float && v == 46
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test23 *#

v = '\0' * (123i + 123)
if v is complex && v == 0
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test24 *#

v = 'u' * true
if v is char && v == 'u'
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test25 *#

v = '+' * '+'
if v is char && v == '9'
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test26 <str> type *#

v = "Hello " * 3
if v is str && v == "Hello Hello Hello "
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test27 *#

v = "eviL" * -2 
if v is str && v == "LiveLive"
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test28 *#

v = "This message will be destroyed" * 0
if v is str && v == ""
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test29 *#

v = "CONSTANT" * true
if v is str && v == "CONSTANT"
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test30 *#

v = "Good Bye!" * '\0'
if v is str && v == ""
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test31 <list> type *#

v = [1, 2, 3] * 3
if v is list && v == [1, 2, 3, 1, 2, 3, 1, 2, 3]
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test32 *#

v = [1, 2, 3] * -2
if v is list && v == [3, 2, 1, 3, 2, 1]
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test33 *#

v = [1, 2, 3] * 0
if v is list && v == []
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test34 *#

v = [1, "OK", 2] * true
if v is list && v == [1, "OK", 2]
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test35 *#

v = ['a'] * '\t'
if v is list && v == ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Result *#

if c == 35:
    "PASSED"
else:
    "       FAILED"
