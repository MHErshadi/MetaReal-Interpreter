r = []
c = 0

#* Test1 *#

if bool != none === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test2 *#

if object != object() === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test3 *#

if int != 2 === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test4 *#

if float != 3.0 === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test5 *#

if complex != (4.0 + 0.0i) === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test6 *#

if bool != true === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test7 *#

if char != 'c' === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test8 *#

if str != "str" === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test9 *#

if list != [1, true, none] === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test10 *#

if tuple != (12, 'g', "tuple") === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test11 *#

if int != int === false && str != object === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test12 *#

if object != func() {} === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test13 *#

if tuple != struct {} === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Result *#

if c === 13:
    "PASSED"
else:
    r
