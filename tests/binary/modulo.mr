a = []
c = 0

#* Test1 <int> type *#

v = 10 % 3
if v is int && v == 1
{
    try
    {
        10 % 0
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test2 *#

v = 6 % 2.5
if v is float && v == 1
{
    try
    {
        5 % 0.0
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test3 *#

v = 17 % true
if v is int && v == 0
{
    try
    {
        17 % false
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test4 *#

v = 128 % 'r'
if v is int && v == 14
{
    try
    {
        0 % '\0'
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test5 <float> type *#

v = 5.25 % 1
if v is float && v == 0.25
{
    try
    {
        1.2 % 0
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test6 *#

v = 5.6 % 2.55
if v is float && v == 0.5
{
    try
    {
        7.12 % 0.0
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test7 *#

v = 7.125 % true
if v is float && v == 0.125
{
    try
    {
        5.33 % false
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test8 *#

v = 13.13 % '|'
if v is float && v == 13.13
{
    try
    {
        0.0 % '\0'
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test9 <bool> type *#

v = true % 1
if v is int && v == 0
{
    try
    {
        false % 0
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test10 *#

v = true % -3.7
if v is float && v == 1
{
    try
    {
        true % 0.0
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test11 *#

v = false % true
if v is bool && v == false
{
    try
    {
        false % false
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test12 *#

v = true % '.'
if v is char && v == ('\0' + true)
{
    try
    {
        false % '\0'
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test13 <char> type *#

v = '@' % 5
if v is int && v == 4
{
    try
    {
        '@' % 0
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test14 *#

v = ')' % 1.5
if v is float && v == 0.5
{
    try
    {
        ')' % 0.0
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test15 *#

v = 'e' % true
if v is char && v == '\0'
{
    try
    {
        '/' % false
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Test16 *#

v = 'q' % 'g'
if v is char && v == '\n'
{
    try
    {
        'q' % '\0'
        a += "FAILED"
    }
    except "Modulo by zero"
    {
        a += "PASSED"
        c++
    }
}
else:
    a += "FAILED"

#* Result *#

if c == 16:
    "PASSED"
else:
    "       FAILED"
