r = []
c = 0

#* Test1 *#

if func() {} !== none === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test2 *#

if func f(x) {x ** 3} !== object() === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test3 *#

if func() {} !== 0 === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test4 *#

if func() {} !== 0.0 === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test5 *#

if func() {} !== 0.0i === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test6 *#

if func() {} !== false === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test7 *#

if func() {} !== '\0' === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test8 *#

if func() {} !== "" === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test9 *#

if func() {} !== [] === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test10 *#

if func f(x) {x} !== (f,) === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test11 *#

if func() {} !== object === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test12 *#

if func f(r, t) {r / (r + t)} !== f === false && func() {} !== func() {} === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Test13 *#

if func() {} !== struct {} === true
{
    r += "PASSED"
    c++
}
else:
    r += "FAILED"

#* Result *#

if c === 13:
    "PASSED"
else:
    r
