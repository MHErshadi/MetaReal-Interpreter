a = []
c = 0

#* Test1 <int> type *#

v = 10 - 100
if v is int && v == -90
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test2 *#

v = 15 - 3.14
if v is float && v == 11.86
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test3 *#

v = 56 - 58i
if v is complex && v == (-58i + 56)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test4 *#

v = 1 - true
if v is int && v == 0
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test5 *#

v = 81 - 'P'
if v is int && v == 1
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test6 <float> type *#

v = 10.125 - 10
if v is float && v == 0.125
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test7 *#

v = 4.4 - 2.2
if v is float && v == 2.2
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test8 *#

v = -1.6 - 6.1i
if v is complex && v == (-6.1i - 1.6)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test9 *#

v = 3.14 - false
if v is float && v == 3.14
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test10 *#

v = 0.0625 - '0'
if v is float && v == -47.9375
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test11 <complex> type *#

v = 0.77i - 0
if v is complex && v == 0.77i
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test12 *#

v = 0i - -9.9
if v is complex && v == (9.9 + 0i)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test13 *#

v = (6i + 9) - (1i - 10.5)
if v is complex && v == (5i + 19.5)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test14 *#

v = 8i - true
if v is complex && v == (8i - 1)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test15 *#

v = (95.95i + 95) - '_'
if v is complex && v == 95.95i
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test16 <bool> type *#

v = true - 7
if v is int && v == -6
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test17 *#

v = false - -0.0204
if v is float && v == 0.0204
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test18 *#

v = true - 19.2i
if v is complex && v == (-19.2i + 1)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test19 *#

v = false - true
if v is bool && v == true
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test20 *#

v = false - '\0'
if v is char && v == '\0'
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test21 <char> type *#

v = 'I' - 9
if v is int && v == 64
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test22 *#

v = 'A' - 0.6
if v is float && v == 64.4
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test23 *#

v = ':' - 99i
if v is complex && v == (-99i + 58)
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test24 *#

v = 'y' - true
if v is char && v == 'x'
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test25 *#

v = '&' - '\0'
if v is char && v == '&'
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test26 <str> type *#

v = "code" - 3
if v is str && v == "cod"
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test27 *#

v = "farm" - -1 
if v is str && v == "far"
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test28 *#

try
{
    v = "out" - 100
    a += "FAILED"
}
except "Index out of range"
{
    a += "PASSED"
    c++
}

#* Test29 *#

v = "pink" - false
if v is str && v == "ink"
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test30 *#

v = "Account Banned" - '\a'
if v is str && v == "AccountBanned"
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test31 <list> type *#

v = [1, 2, 2, 3, 4] - 1
if v is list && v == [1, 2, 3, 4]
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test32 *#

v = [0.1, 0.2, 0.3, 0.3] - -2 
if v is list && v == [0.1, 0.2, 0.3]
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test33 *#

try
{
    v = [1] - 1
    a += "FAILED"
}
except "Index out of range"
{
    a += "PASSED"
    c++
}

#* Test34 *#

v = [true, false, true, true] - true
if v is list && v == [true, true, true]
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Test35 *#

v = [1, 1, 1, 1, 1, 1, 1, 1, none] - '\b'
if v is list && v == [1, 1, 1, 1, 1, 1, 1, 1]
{
    a += "PASSED"
    c++
}
else:
    a += "FAILED"

#* Result *#

if c == 35:
    "PASSED"
else:
    "       FAILED"
